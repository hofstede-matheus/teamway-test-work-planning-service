# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build with Cloud Build

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  SERVICE_NAME: teamway-test-work-planning-service
  env: prod
  API_PORT: 3001

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      # - id: 'auth'
      #   name: 'Authenticate to Google Cloud'
      #   uses: 'google-github-actions/auth@v1'
      #   with:
      #     workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
      #     service_account: '${{ secrets.RUN_SA_EMAIL }}'

      # Alternative option - authentication via credentials json
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.RUN_SA_KEY }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Build and push image to Google Container Registry
      - name: Build
        run: |-
          echo env=$env >> .env
          echo DATABASE_HOST=$DATABASE_HOST
          echo DATABASE_NAME=$DATABASE_NAME >> .env
          echo DATABASE_USER=$DATABASE_USER >> .env
          echo DATABASE_PASSWORD=$DATABASE_PASSWORD >> .env
          echo DATABASE_PORT=$DATABASE_PORT >> .env
          echo DATABASE_LOGGING=$DATABASE_LOGGING >> .env
          echo API_PORT=$API_PORT >> .env
          echo MONGODB_CONNECTION_STRING=$MONGODB_CONNECTION_STRING >> .env
          echo MONGODB_DATABASE_NAME=$MONGODB_DATABASE_NAME >> .env
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
            -f Dockerfile.prd
